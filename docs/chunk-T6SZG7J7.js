import{a as m,b as c,c as d,d as p,e as h,f as a,g as T,n as f,o as u,q as v}from"./chunk-XOODDCVZ.js";var i,C=(i=class extends v{constructor(){super(["treemap"])}},a(i,"TreemapTokenBuilder"),i),V=/classDef\s+([A-Z_a-z]\w+)(?:\s+([^\n\r;]*))?;?/,n,M=(n=class extends u{runCustomConverter(r,e,o){if(r.name==="NUMBER2")return parseFloat(e.replace(/,/g,""));if(r.name==="SEPARATOR")return e.substring(1,e.length-1);if(r.name==="STRING2")return e.substring(1,e.length-1);if(r.name==="INDENTATION")return e.length;if(r.name==="ClassDef"){if(typeof e!="string")return e;let t=V.exec(e);if(t)return{$type:"ClassDefStatement",className:t[1],styleText:t[2]||void 0}}}},a(n,"TreemapValueConverter"),n);function g(l){let r=l.validation.TreemapValidator,e=l.validation.ValidationRegistry;if(e){let o={Treemap:r.checkSingleRoot.bind(r)};e.register(o,r)}}a(g,"registerValidationChecks");var s,S=(s=class{checkSingleRoot(r,e){let o;for(let t of r.TreemapRows)t.item&&(o===void 0&&t.indent===void 0?o=0:t.indent===void 0?e("error","Multiple root nodes are not allowed in a treemap.",{node:t,property:"item"}):o!==void 0&&o>=parseInt(t.indent,10)&&e("error","Multiple root nodes are not allowed in a treemap.",{node:t,property:"item"}))}},a(s,"TreemapValidator"),s),k={parser:{TokenBuilder:a(()=>new C,"TokenBuilder"),ValueConverter:a(()=>new M,"ValueConverter")},validation:{TreemapValidator:a(()=>new S,"TreemapValidator")}};function y(l=p){let r=d(c(l),T),e=d(m({shared:r}),f,k);return r.ServiceRegistry.register(e),g(e),{shared:r,Treemap:e}}a(y,"createTreemapServices");export{k as a,y as b};
